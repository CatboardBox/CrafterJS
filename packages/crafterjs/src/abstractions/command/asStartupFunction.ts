import { McFunction } from "../mcFunction";
import { Namespace, NestedNamespace, RootNamespace } from "../namespace";
import { CommandInstance } from "./commandInstance";

// used for deduplicating auto generated functions
const startupFns: Record<string, McFunction> = {};
const namespaceMap = new Map<RootNamespace, Namespace>();

export function asStartupFunction(
  command: CommandInstance,
  sourceNamespace: Namespace
) {
  if (!namespaceMap.has(sourceNamespace.rootNamespace)) {
    namespaceMap.set(
      sourceNamespace.rootNamespace,
      new NestedNamespace("startupFunctions", sourceNamespace.rootNamespace)
    );
  }
  const namespace = namespaceMap.get(sourceNamespace.rootNamespace)!;
  if (!startupFns[namespace.namespacePath]) {
    startupFns[namespace.namespacePath] = new McFunction({
      namespace,
      name: "startupFunction",
      buildPriority: 5,
    });
    startupFns[namespace.namespacePath].addComment("autogenerated");
    startupFns[namespace.namespacePath].runOnLoad();
  }
  startupFns[namespace.namespacePath].addCommand(command);
}
